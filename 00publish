#! /usr/bin/zsh

mode=
[[ -n $@ ]] && { mode=$1; shift }
case $mode in
  'h'|'help')
    echo '![i]nfos / [v]ersion / [d]iff / [pub]lish *pkgs / clean' ;;
  ''|'i'|'infos' )
    # see currently released pkgbuilds:
    git my topic infos -r
    ;;
  'v'|'version' )
    # list current published versions
    for i in $(git branch --list --remote "aur/*"); do pkg=${i:h:t}; echo "* $pkg *"; git show "${i}:PKGBUILD" | egrep "pkg(ver|rel)="; echo; done;
    ;;
  'vd'|'version-diff' )
    # list current published versions and the diff with the previous
    # release
    for i in $(git branch --list --remote "aur/*"); do pkg=${i:h:t}; echo "* $pkg *"; git show "${i}" -- "PKGBUILD" | egrep "pkg(ver|rel)="; echo; done;
    ;;
  'd'|'di'|'diff' )
    # list current published versions
    for i in $(git branch --list --remote "aur/*"); do pkg=${i:h:t}; echo "* $pkg *"; gitdiff =(git show "${i}:PKGBUILD") "${pkg}/PKGBUILD"  | egrep "pkg(ver|rel)="; echo; done;
    ;;
  'pub'|'publish')
    # checkout to public, and add master's current tree
    git my trivial -- -B public --use master public
    git checkout public
    for pkg in $@; do
      aurpublish $pkg
      # If this is a new package, add the remote:
      git remote add aur/$pkg aur:$pkg.git
    done
    git checkout master
    git fetch --all
    ;;
  clean)
    # remove build and src files:
    git clean -dnx
    echo 'git clean -dfx'
    ;;
esac

# # new release: update package build with integrity hash
# makepkg -g
# # test: (-c: clean, -r: rmdeps, -s: sync)
# makepkg -crs --needed

